<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shinjin.twone.dao.MemDAO" >

    <!-- 회원가입 -->
    <insert id="signup" useGeneratedKeys="true" keyProperty="memSeq" parameterType="MemDTO">
        <selectKey keyProperty="memSeq" resultType="int" order="BEFORE">
            SELECT nextval('mem_seq') FROM dual
        </selectKey>
        INSERT INTO t_mem
        VALUES
            (#{memSeq}, #{memEmail}, #{memName}, #{memPw}
            , (SELECT DATE(DATE_ADD(NOW(), INTERVAL 6 MONTH))), 0, 0
            , null, null, null, null, null, null)
    </insert>

    <!-- 회원탈퇴 -->
    <update id="withdraw" parameterType="int">
        UPDATE t_mem
        SET mem_delCheck = 1
        WHERE mem_seq = #{memSeq}
    </update>

    <!-- 회원정보 수정 -->
    <update id="updateMemInfo" parameterType="MemDTO">
        UPDATE t_mem
        SET
            <if test="memName!='' and memName != null">
                mem_name = #{memName},
            </if>
            mem_position = #{memPosition},
            mem_dept = #{memDept},
            mem_company = #{memCompany}
        WHERE mem_seq = #{memSeq}
    </update>

    <!-- 회원 프로필 이미지 업로드 -->
    <update id="updateMemImage" parameterType="MemDTO">
        UPDATE t_mem
        SET
            mem_image = #{memImage}
        WHERE mem_seq = #{memSeq}
    </update>

    <!-- 회원 프로필 기본 이미지 병경 -->
    <update id="deleteMemImage" parameterType="int">
        UPDATE t_mem
        SET mem_image = null
        WHERE mem_seq = #{memSeq}
    </update>
    <!-- 비밀번호 변경 -->
    <update id="changePw" parameterType="MemDto">
        UPDATE t_mem
        SET mem_pw = #{memPw}, mem_key = null, mem_key_date = null
        WHERE mem_seq = #{memSeq}
    </update>

    <!-- 사용자 메일인증 키값 저장-->
    <update id="updateMemKey" parameterType="MemDTO">
        UPDATE t_mem
        SET mem_key= #{memKey} , mem_key_date = NOW()
        WHERE mem_seq= #{memSeq}
    </update>

    <!-- 사용자 메일인증 키값 저장 for 비밀번호 분실 멤버 -->
    <update id="updateMemKeyForLostPwMember" parameterType="MemDTO">
        UPDATE t_mem
        SET mem_key= #{memKey} , mem_key_date = NOW()
        WHERE mem_email= #{memEmail}
    </update>

    <!-- 메일 인증 여부 변경   -->
    <update id="changeMailCert" parameterType="Map">
        UPDATE t_mem
        SET mem_cert = 1 , mem_key = null, mem_key_date = null
        WHERE mem_email= #{email} and mem_key= #{key}
    </update>

    <!-- 이메일 인증 - 비밀번호 재설정 -->
    <select id="checkMemKey" parameterType="Map" resultType="int">
        SELECT mem_seq
        FROM t_mem
        WHERE mem_email= #{email} AND mem_key= #{key}
    </select>

    <!-- 발급일 하루 지난 사용자의 발급일, 발급일자, 이메일 인증 변경-->
    <update id="timeOut">
        update t_mem set mem_key_date = null, mem_key = null , mem_cert =2  where  date_add(mem_key_date, interval 1 DAY )
        <![CDATA[ < ]]> (SELECT NOW())
    </update>

    <!-- 중복 이메일 확인 -->
    <select id="checkDupl" parameterType="String" resultType="int">
        SELECT mem_delcheck
        FROM t_mem
        WHERE mem_email = #{memEmail}
    </select>

    <!-- 로그인 -->
    <select id="login" parameterType="MemDTO" resultType="MemDTO">
        SELECT *
        FROM t_mem
        WHERE mem_email = #{memEmail} and mem_delcheck = 0
    </select>

    <!-- memDTO 불러오기 -->
    <select id="getDto" parameterType="int" resultType="MemDTO">
        SELECT *
        FROM t_mem
        WHERE mem_seq = #{memSeq}
    </select>

    <!-- 비밀번호 일치 여부 확인 -->
    <select id="getPw" parameterType="int" resultType="String">
        SELECT mem_pw
        FROM t_mem
        WHERE mem_seq = #{memSeq}
    </select>

    <!-- 팀 멤버 불러오기 for 이슈폼 -->
    <select id="getTeamMemberForIssueForm" parameterType="int" resultType="MemDTO">
        SELECT m.*
        FROM t_team t, t_mem m
        WHERE t.project_seq = #{projectSeq}
            and t.team_allow != 3
            and t.mem_seq = m.mem_seq
    </select>

</mapper>